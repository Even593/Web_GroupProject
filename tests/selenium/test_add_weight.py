# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestAddweight():

    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}
        self.wait = WebDriverWait(self.driver, 10)

    def teardown_method(self, method):
        self.driver.quit()

    def test_addweight(self):
        self.driver.get("http://127.0.0.1:5000/")
        self.driver.find_element(By.ID, "login-username").click()
        self.driver.find_element(By.ID, "login-username").send_keys("demo")
        self.driver.find_element(By.ID, "login-password").send_keys("demo")
        self.driver.find_element(By.ID, "login-submit").click()
        # wait for and click "Weight Record" link
        weight_record_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "Weight Record")))
        weight_record_link.click()
        # wait for record date input
        record_date_input = self.wait.until(EC.element_to_be_clickable((By.ID, "record_date")))
        record_date_input.click()
        record_date_input.clear()
        record_date_input.send_keys("2025-05-14")
        # wait for weight input
        weight_input = self.wait.until(EC.element_to_be_clickable((By.ID, "weight_kg")))
        weight_input.click()
        weight_input.clear()
        weight_input.send_keys("66")
        # wait for and click submit
        submit_btn = self.wait.until(EC.element_to_be_clickable((By.ID, "submit")))
        submit_btn.click()
        # wait for and click "View Chart" link
        view_chart_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "View Chart")))
        view_chart_link.click()
        # wait for and click "Weight Record" link
        weight_record_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "Weight Record")))
        weight_record_link.click()
        # wait for record date input
        record_date_input = self.wait.until(EC.element_to_be_clickable((By.ID, "record_date")))
        record_date_input.click()
        record_date_input.clear()
        record_date_input.send_keys("2025-05-07")
        # wait for weight input
        weight_input = self.wait.until(EC.element_to_be_clickable((By.ID, "weight_kg")))
        weight_input.click()
        weight_input.clear()
        weight_input.send_keys("56")
        # wait for and click submit
        submit_btn = self.wait.until(EC.element_to_be_clickable((By.ID, "submit")))
        submit_btn.click()
        # wait for and click "View Chart" link
        view_chart_link = self.wait.until(EC.element_to_be_clickable((By.LINK_TEXT, "View Chart")))
        view_chart_link.click()
        # wait for the record table to load fully

